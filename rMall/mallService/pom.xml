<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>eCommerce</groupId>
		<artifactId>rMall</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>mallService</artifactId>
	<packaging>war</packaging>
	<name>mallService Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<build>
		<finalName>mallService</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>../conf/${environment.path}</directory>
									<!-- 指定不需要处理的资源 <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
									<!-- 是否对待处理的资源开启过滤模式 (resources插件的copy-resources目标也有资源过滤的功能，这里配置的 
										这个功能的效果跟<build><resources><resource>下配置的资源过滤是一样的，只不过可能执行的阶段不一样， 这里执行的阶段是插件指定的validate阶段，<build><resources><resource>下的配置将是在resources插件的resources目标执行时起作用（在process-resources阶段）) -->
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
						<inherited></inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.wildfly.plugins</groupId>
			    <artifactId>wildfly-maven-plugin</artifactId>
			    <version>1.0.2.Final</version>
			    <configuration>
			    	<hostname>127.0.0.1</hostname>
			    	<port>9990</port>
			    	<username>jboss</username>
			    	<password>123456</password>
			    	<filename>../../mallService/target/mallService.war</filename>
			    	<domain>
			    		<server-groups>
			    			<server-group>main-server-group</server-group>
			    		</server-groups>
			    	</domain>
			    </configuration>
			    <executions>
					<execution>
						<id>deploy</id>
						<phase>install</phase>
						<goals><goal>deploy</goal></goals>
					</execution>
					<!-- <execution>
						<id>undeploy</id>
						<phase>clean</phase>
						<goals><goal>undeploy</goal></goals>
						<configuration>
							<ignoreMissingDeployment>true</ignoreMissingDeployment>
						</configuration>
					</execution> -->
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- CXF -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<!-- <exclusions>
				<exclusion>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-frontend-simple</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-ws-policy</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<!-- <exclusions>
				<exclusion>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-bindings-xml</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
		</dependency>

		<!-- SPRINGFRAMEWORK -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!-- HIBERNATE -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency> -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.logback-extensions</groupId>
		    <artifactId>logback-ext-spring</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<!-- JACKSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
		</dependency>
		
		<dependency>  
	        <groupId>org.codehaus.jackson</groupId>  
	        <artifactId>jackson-core-asl</artifactId>
	    </dependency>  
	    <dependency>
	        <groupId>org.codehaus.jackson</groupId>  
	        <artifactId>jackson-mapper-asl</artifactId>
	    </dependency>
	    
		<!-- proxool -->
		<!-- <dependency>
			<groupId>com.cloudhopper.proxool</groupId>
			<artifactId>proxool</artifactId>
			<exclusions>
				<exclusion>
          		<groupId>log4j</groupId>
          		<artifactId>log4j</artifactId>
        		</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.cloudhopper.proxool</groupId>
			<artifactId>proxool-cglib</artifactId>
		</dependency> -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>druid</artifactId>
		</dependency>

		<!-- H2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>eCommerce</groupId>
			<artifactId>Domain</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>eCommerce</groupId>
			<artifactId>Service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>
</project>
